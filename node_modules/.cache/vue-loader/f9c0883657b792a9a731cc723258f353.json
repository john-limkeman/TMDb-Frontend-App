{"remainingRequest":"/Users/johnlimkeman/Desktop/TMDb-Frontend-App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/johnlimkeman/Desktop/TMDb-Frontend-App/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/johnlimkeman/Desktop/TMDb-Frontend-App/src/App.vue","mtime":1616708941953},{"path":"/Users/johnlimkeman/Desktop/TMDb-Frontend-App/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/johnlimkeman/Desktop/TMDb-Frontend-App/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/johnlimkeman/Desktop/TMDb-Frontend-App/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/johnlimkeman/Desktop/TMDb-Frontend-App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/johnlimkeman/Desktop/TMDb-Frontend-App/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojYXBwIHsKICBmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmOwogIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkOwogIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGNvbG9yOiAjMmMzZTUwOwogIG1hcmdpbi10b3A6IDYwcHg7Cgp9CiAgI2xvZ297CmhlaWdodDogMjAwcHg7CndpZHRoOiBhdXRvOwogIH0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <img id=\"logo\" src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\" alt=\"The Movie Database\">\n   <br/>\n    <select name=\"typeToggle\"  v-model=\"query.type\">\n    <option value=\"all\">All</option>\n    <option value=\"movie\">Movies</option>\n    <option value=\"tv\">TV Shows</option>\n    <option value=\"person\">People</option>\n    </select>\n    <input type=\"text\" v-model=\"query.text\" >\n    <button v-on:click=\"conductSearch()\">SEARCH</button>\n    <ResultView v-bind:results=\"results\" v-if=\"results.length > 0\"/>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport ResultView from './components/ResultView.vue'\nexport default {\n  name: 'App',\n  data(){\n      return{\n        results: [],\n        chosenItem: [],\n        query: {\n          text: \"\",\n          page: 1,\n          type: \"movie\",\n        },\n        api: {\n          base: \"https://api.themoviedb.org/3\",\n          key: '917369bb118862e487faedc2fa6bf48d',\n          params: \"&language=en-US&include_adult=false&query=\",\n          page: \"&page=\",\n          configuration: {},\n        }\n    }\n  },\n  methods: {\n    conductSearch(){\n      console.log(this.query)\n      if(this.query.type == \"movie\"){\n        this.searchMovies();\n      } else if (this.query.type == \"tv\"){\n        this.searchTV();\n      } else{\n        this.searchPeople();\n      }\n    },\n    searchMovies(){\n      console.log(\"movie search...\")\n      try{\n        axios.get(`${this.api.base}/search/movie?api_key=${this.api.key}${this.api.params}${this.query.text}${this.api.page}${this.query.page}`)\n        .then(result =>{\n          this.results = result.data.results;\n        })\n        console.log(this.results)\n      } catch(error){\n        console.log(\"error\")\n      }\n    },\n    searchTV(){\n      console.log(\"tv search...\")\n       try{\n        axios.get(`${this.api.base}/search/tv?api_key=${this.api.key}${this.api.params}${this.query.text}${this.api.page}${this.query.page}`)\n        .then(result =>{\n          this.results = result.data.results;\n        })\n        console.log(this.results)\n      } catch(error){\n        console.log(\"error\")\n      }\n    },\n    searchPeople(){\n      console.log(\"people search...\")\n       try{\n        axios.get(`${this.api.base}/search/person?api_key=${this.api.key}${this.api.params}${this.query.text}${this.api.page}${this.query.page}`)\n        .then(result =>{\n          this.results = result.data.results;\n        })\n        console.log(this.results)\n      } catch(error){\n        console.log(\"error\")\n      }\n    }\n\n  },\n  components: {\n    ResultView\n  },\n  created() {\n    \n      axios.get(`${this.api.base}/configuration?api_key=${this.api.key}`).then(response => {\n        this.api.configuration = response.data;\n      })\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n\n}\n  #logo{\nheight: 200px;\nwidth: auto;\n  }\n</style>\n"]}]}